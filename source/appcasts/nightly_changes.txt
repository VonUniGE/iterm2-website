2021-02-17: Fix some bugs in broadcast to panes in current
tab. The model was muddled. I think what it was mean to be
is: this broadcast mode is enabled on tabs, not on the
window. Other modes are enabled on the window, and when
selected reset the per-tab setting and supercede it. Now
when you toggle it, it will enable/disable the setting for
the current tab. If doing so disables it for all tabs in the
window then the mode is reset to off. Meanwhile, the checked
item in the menu takes the current tab into account when
choosing between 'off' and 'all panes in current tab'. Issue
9492

2021-02-17: Assign GUIDs to snippets and use them to
identify actions. Includes a migration path for existing
actions that use title as the identifier. Title can be
ambiguous (see email with subject "Snippets broken with last
iTerm2 version").

2021-02-16: Update fish shell integration script to v12

2021-02-14: Recheck blur when updating tab bar style (#437)

When changing the tab bar theme in Preferences > Appearance
> Theme, all active windows lose their blur until each
window is clicked individually or regains focus. This
re-enables blur after changing the tab bar theme.
2021-02-13: Add soft hyphen to the set of unicode dashes for
advanced paste's 'convert unicode punctuation' feature.
Issue 9497

2021-02-13: When using the default background color in the
GPU renderer, set the unprocessed background color correctly
except set the alpha to 0. This allows
useThinStrokesWithAttributes to get the right inputs.
Previously it would appear to be black which made it do
silly things for light backgrounds in the retina-only
configuration. Issue 9486

2021-02-12: Prevent fractional image sizes which break
creating a bitmap context and a subsequent crash in the
badge renderer. Issue 9490

2021-02-12: Don't vertically flip tab icons on 10.14. Issue
9496

2021-02-12: Remove stray word

2021-02-11: Assert that texture buffer creation succeeds to
make sense of 9490

2021-02-11: Add an advanced pref to disable animating status
bar graphs. Issue 9489

2021-02-10: Remove html tags from window title and tab
tooltip. Also fix the profile name in the tab tooltip which
was wrong for sessions with customized names. Issue 9488.

2021-02-10: Tolerate failure to create a bitmap context in
rawDataForMetal. Issue 9490

2021-02-10: Try ~/.iterm2 if ~/.config/iterm2 doesn't work
to try to prevent crashes like issue 9493. If both fail show
an alert explaining what went wrong before crashing.

2021-02-10: When 'close windows when app quits' is on for
some reason we still get a window restoration request to
PseudoTerminalRestorer. Previously the completion block was
never run. This blocked the creation of any windows, leaving
the app wedged.

2021-02-09: Fix downscaling of images in Metal renderer.
Issue 9475

2021-02-08: Fix tooltip for html titles prefs checkbox.
Issue 9485

2021-02-07: Add GPG signing to release_stable.sh

2021-02-07: When restoring an arrangement adjust the
window's width up or down if scroller style has changed
since it was saved. This will only affect newly saved
arrangements. Issue 9479

2021-02-07: Include hardware model, screen farmes, and OS
version in debug logs

2021-02-06: Turn on scrollback with status bar by default.
Terminal has this, and I don't see how it would break
anything. It being off caused issue 9463

2021-02-06: Respect continuation characters (backslash in
last column, as used in emacs) which was lost in
7e4b5eb770ed951cf67a705cbb969632f7b0b41a. I don't know why
that commit removed it; it seems to work fine. Issue 9478

2021-02-06: Fix a bug where a window forgot it was blurred
when toggling traditional fullscreen in Minimal theme. Issue
9477.

2021-02-06: Add window > move session to window. Issue 9476

2021-02-06: Fix keystroke filtering, which seems to have
been broken :(. See issue 9214

2021-02-05: Move legacy text drawing into a separate view.

Also, fix problems where bg color & image views had wrong
alpha in full screen sometimes.

2021-02-04: Fix a bug where disabling
middle-click-to-close-a-tab also breaks the tab close
button. Issue 9470

2021-02-04: Retain _font in ProfileListView. Issue 9446

2021-02-04: Update menus when trying to select a menu item
by shortcut to ensure their enabled status is correct. Issue
9328

2021-02-04: Add include

2021-02-04: Make background color view's background color
always opaque when in Lion fullscreen. This fixes the bug
where transparent panes in fullscreen are lighter than they
should be.

Update window background color after exiting full screen so
that the window will not be opaque if the front tab is
transparent. This fixes the bug where creating a new tab and
then exiting fullscreen leaves you with an opaque gray
background.

Issue 9462

2021-02-03: Fix a bug introduced waaaay back in 5f1fa63
where mouseDown was renamed to _mouseDown but Apple
*awesomely* has a global symbol named mouseDown and I missed
two of them. The effect of this change is intended to be to
ignore mouseUp when called more than once in a row. I don't
think it will have a big effect, but who knows - mouse
events are crazy and there will probably be unexpected
consequences. This commit also copies text when ending live
selection to avoid problems as seen in issue 9461 where a
trackpad did nutty things and a mouse-up that was (probably)
misidentified as a three-finger touch (in part because of
the mouseDown bug) ended live selection but didn't copy.

2021-02-02: Turn on fastTrackpad because of confirmation by
dylan71 in issue 9427 that the fix in
d7d63c3e34d2a3386dd92856545c4e526861bf9a worked.

2021-02-02: Don't wait more than 100ms for a swipe after
phase=MayBegin. It looks like some pointing devices send a
scroll event like <NSEvent: 0x600000868410 phase=MayBegin,
momentumPhase=None, scrollingDeltaX=0.000000> and never
follow it with begin/cancel. Issue 9306.

2021-01-30: Make composer use terminal's font. Issue 9458

2021-01-30: Add highlight line trigger. Issue 9443

2021-01-27: Show color preview when context menu is opened
with hex color selected. Issue 9457

2021-01-27: Change fast-trackpad behavior. Don't
double-multiply by lineheight when scrollbars are hidden.
Always use the scroll accumulator (even when scrollbars
aren't hidden) to get consistent behavior. Issue 9427

2021-01-27: Support control+shift modifiers for arrow keys
in the standard key mapper. For whatever reason these take
the performKeyEquivalent code path. Cocoa's input handling
is certainly mysterious, so this change is as narrow in
scope as possible to avoid introducing bugs. Issue 8382

2021-01-24: Partially reset terminal when restoring a
session (such as when launching a new program in a restored
session after a reboot or when restarting a terminated
session) so things like paste bracketing get reset.

2021-01-23: Ignore dynamic profile files that end in "~"
(GNU-syle backups) (#436)

GNU tools often support or default to making backups of
modified files. By default, the previous contents of the
file are preserved in `filename~` or `filename.~1~`. See
[the coreutils
docs](https://www.gnu.org/software/coreutils/manual/html_node/Backup-options.html)
and [some Emacs
docs](https://www.gnu.org/software/emacs/manual/html_node/emacs/Backup-Names.html).
Note that Emacs produces `filename~` backups by default.
Users generally do not expect these files to be read
automatically.

When using Emacs to edit a dynamic profile, saving it
immediately causes an iTerm diagnostic: both `filename` and
`filename~` will likely contain the same UUID.

Instead of making a special case for `~`, this problem could
be solved by requiring dynamic profiles have a known suffix,
like `.json`. This eliminates all kinds of directory detrius
at the cost of breaking some people's configs.  2021-01-23:
Reset zooming flag if liveResize_ isn't set synchronously
after calling windowWillUseStandardFrame. Fixes a bug where
the GPU renderer gets stuck 'off' when 'System Prefs >
Accessibility > Display > Reduce motion' is enabled. Issue
9436

2021-01-23: Marry sqlite based state restoration with macOS
system restoration opportunistically. If macOS *does* try to
restore a window, we call its completion block with the
actually-restored window. That will move it to the correct
desktop after a reboot. If macOS asks us to restore a window
we have no state for, run the callback but indicate failure.
Issue 9445

2021-01-23: Disable fast trackpad by default until logitech
problems in issue 9427 can be resolved. The adhoc branch
20210118_141155 contains a change to work more like
Terminal.app, but it seems to misbehave when using Logitech
Options.

2021-01-23: Use cmd-modifier for key equivalents in
warnings. Issue 9447

2021-01-23: Give the multiline paste confirmation dialog box
a title

2021-01-23: Add debug logging for issue 9437

2021-01-23: Unanchor window from a preferred screen when the
user moves it by chosing the menu item Window > Move to
[screen]. Issue 9087

2021-01-21: Make the GPU renderer draw every half second to
avoid encountering high latency when requesting a drawable.

2021-01-19: Recheck blur when changing window styles (#435)


2021-01-19: Fix truncated view in search field find bar

2021-01-19: Fix bugs in the textview wrapper background
color feature and also make it build on 10.15 sdk

2021-01-18: Add libgit2

2021-01-18: Make the textview wrapper draw the background
color when the background color view is hidden.

2021-01-18: Bump max blur on 10.14. Issue 9229.

2021-01-18: Try to make the scrolling algorithm for
trackpads more like Terminal.app. Issue 9427

2021-01-18: Fix advanced working directory window so that
its text fields can become first responder. I think this has
been broken since Big Sur broke utility panels. Issue 9431

2021-01-18: Don't try to add custom actions to the context
menu if there is an invalid click coord, as when you open
the menu from the pane titlebar.

2021-01-18: Don't attempt to extract a URL from invalid
coordinates (-1,-1) if context menu is opened from the
session titlebar (#434)


2021-01-18: Fix file descriptor leak in iTerm2. Issue 9430

* Close file descriptor when
iTermFileDescriptorMultiClientChild gets dealloced. This
fixes a file descriptor leak.  * Invoke all wait callbacks
from handleWait:. Failing to call the one added in
fileDescriptorMultiClient:childDidTerminate: caused a leak
of iTermFileDescriptorMultiClientChild.  * Add a call to
brokenPipe in finishAttaching:task: for jobs that terminated
while iTerm2 was not running. This ensures you get the
"session ended" banner on terminated restored sessions and
orphans.  * Add support for tracing iTermCallback.

2021-01-17: Fix file descriptor leak in iTermServer. Issue
9430

2021-01-17: Fix a bug where doublecliking on a session
titlebar didn't maximize tmux panes correctly. Issue 9428

2021-01-17: Fix a bug where the big sur fullscreen white
line workaround left an empty spot at the top of the screen
in minimal after hiding the tabbar

2021-01-17: Disgusting hack to remove titlebar divider when
there's a top tabbar. Issue 9424.

2021-01-17: Fix colors of dark tabbar on big sur.

2021-01-17: Fix shortcut for zoom to cmd-shift-0.

2021-01-16: Add git branch as a search feature for open
quickly

2021-01-16: Expose git repo state (merging, picking, etc.)
and show in the status bar.

2021-01-16: Use libgit2 to fetch list of recent branches
when you click on the status bar component

2021-01-16: Use libgit2 instead of shelling out to git for
the status bar git component.

2021-01-15: Add menu command to create a new window with the
current profile (#433)


2021-01-15: Add prefs to make left/right option keys
changeable by decset 1036. Issue 8195

Also update Python profile.py and its sphinx docs, which
were out of date.

2021-01-10: Add debug logging to indicate whether we
detected a password prompt

2021-01-10: Fix crash when clicking on git component because
completion block got called twice

2021-01-10: Add support for HDR cursor. This isn't ready for
prime time because it only works in the metal renderer and
only works when the cursor color is pure white. It's mostly
for me to play around with to see if it's worth shipping.

2021-01-10: Fix warning

2021-01-09: Create CODE_OF_CONDUCT.md 2021-01-08:
Experimental (beta only by default): add support for decset
1036. Issue 8195

2021-01-08: When you cmd-drag drop a file, cd to its
containing folder. Issue 9412

2021-01-05: Respect do-not-remap when secure input is
enabled. Issue 9401

2021-01-05: Restore window's miniaturization state. Issue
6627

2021-01-04: Commit daed41c33dffbcf6520f8d4429a0f3e6e2576af7
introduced a bug because it treated initial windows the same
as anonymous windows, causing them to always open in the
attaching tab. Adding to the confusion is that it didn't
take commit 8d92dd6e05 in to account. This commit explicitly
labels windows as anonymous and uses the advanced pref added
daed41c in for them while respecting the user's setting for
the initial attach. Issue 9403

2021-01-04: When a tab drag exits the tabbar select the
previously selected tab. If the current tab is being
dragged, select the next one if possible otherwise the
previous one. Fixes a problem where you couldn't drag
another tab into a split pane in the current tab. Brought up
in mailing list subject 'New tab-drag behavior: Bug or
feature'

2021-01-04: Clarify how to verify signature in changelog

2021-01-03: Fix how the hash is signed by gpg.

2021-01-03: Add 'Copy Link Address' to context menu. Issue
9397

2021-01-03: Don't attempt path completions in composer in
tmux integration. Maybe some day.

2021-01-03: Add history suggestions to composer. Do not
suggest filenames when not on localhost

2021-01-03: Fix support for quoting in completion
suggestions

2021-01-03: Add rudimentary completion abilities to the
composer

2021-01-02: Support command history via composer in the
absence of shell integration

2021-01-02: Change explainshell shortcut to include option
to avoid conflicting with system shortcut

2021-01-02: Add a button in composer to open explainshell

2021-01-02: Eliminate composer popover and use dropdown
composer as the expanded form of the status bar composer.

2021-01-02: Fix appearance of tab colors menu in dark mode.
Make the 'no color' selection a box with a slash intead of
an X for consistency

2021-01-02: Add support for command history to large (aka
dropdown) composer view.

2021-01-01: Break iTermPopupWindowController's dependency on
PTYTextView

2021-01-01: Make Cmd-shift-. keyboard shortcut open the
dropdown composer rather than the popover.

2021-01-01: Remove iTermTextFixup, which is no longer needed
because its only purpose is to deal with background colors
for cells that overlap their neighbors and the previous
commit eliminated the use of background color in the text
renderer (the fragment shader samples when this is needed)

2021-01-01: Don't pass background color to text Metal
renderer because it does not need it.

2021-01-01: Fix a bug where we used transparent as the bg
color for the default background color in the GPU renderer
when computing minimum contrast. This commit changes it to
use the actual background color for the minimum contrast
calculation and then use transparent everywhere else. Issue
9387.

2021-01-01: Avoid burning CPU when we're waiting for GPU
resources to become free. Issue 9393

2021-01-01: Attempt to include pgp signature in changelogs
