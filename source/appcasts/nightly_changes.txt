2021-01-27: Change fast-trackpad behavior. Don't
double-multiply by lineheight when scrollbars are hidden.
Always use the scroll accumulator (even when scrollbars
aren't hidden) to get consistent behavior. Issue 9427

2021-01-27: Support control+shift modifiers for arrow keys
in the standard key mapper. For whatever reason these take
the performKeyEquivalent code path. Cocoa's input handling
is certainly mysterious, so this change is as narrow in
scope as possible to avoid introducing bugs. Issue 8382

2021-01-24: Partially reset terminal when restoring a
session (such as when launching a new program in a restored
session after a reboot or when restarting a terminated
session) so things like paste bracketing get reset.

2021-01-23: Ignore dynamic profile files that end in "~"
(GNU-syle backups) (#436)

GNU tools often support or default to making backups of
modified files. By default, the previous contents of the
file are preserved in `filename~` or `filename.~1~`. See
[the coreutils
docs](https://www.gnu.org/software/coreutils/manual/html_node/Backup-options.html)
and [some Emacs
docs](https://www.gnu.org/software/emacs/manual/html_node/emacs/Backup-Names.html).
Note that Emacs produces `filename~` backups by default.
Users generally do not expect these files to be read
automatically.

When using Emacs to edit a dynamic profile, saving it
immediately causes an iTerm diagnostic: both `filename` and
`filename~` will likely contain the same UUID.

Instead of making a special case for `~`, this problem could
be solved by requiring dynamic profiles have a known suffix,
like `.json`. This eliminates all kinds of directory detrius
at the cost of breaking some people's configs.  2021-01-23:
Reset zooming flag if liveResize_ isn't set synchronously
after calling windowWillUseStandardFrame. Fixes a bug where
the GPU renderer gets stuck 'off' when 'System Prefs >
Accessibility > Display > Reduce motion' is enabled. Issue
9436

2021-01-23: Marry sqlite based state restoration with macOS
system restoration opportunistically. If macOS *does* try to
restore a window, we call its completion block with the
actually-restored window. That will move it to the correct
desktop after a reboot. If macOS asks us to restore a window
we have no state for, run the callback but indicate failure.
Issue 9445

2021-01-23: Disable fast trackpad by default until logitech
problems in issue 9427 can be resolved. The adhoc branch
20210118_141155 contains a change to work more like
Terminal.app, but it seems to misbehave when using Logitech
Options.

2021-01-23: Use cmd-modifier for key equivalents in
warnings. Issue 9447

2021-01-23: Give the multiline paste confirmation dialog box
a title

2021-01-23: Add debug logging for issue 9437

2021-01-23: Unanchor window from a preferred screen when the
user moves it by chosing the menu item Window > Move to
[screen]. Issue 9087

2021-01-21: Make the GPU renderer draw every half second to
avoid encountering high latency when requesting a drawable.

2021-01-19: Recheck blur when changing window styles (#435)


2021-01-19: Fix truncated view in search field find bar

2021-01-19: Fix bugs in the textview wrapper background
color feature and also make it build on 10.15 sdk

2021-01-18: Add libgit2

2021-01-18: Make the textview wrapper draw the background
color when the background color view is hidden.

2021-01-18: Bump max blur on 10.14. Issue 9229.

2021-01-18: Try to make the scrolling algorithm for
trackpads more like Terminal.app. Issue 9427

2021-01-18: Fix advanced working directory window so that
its text fields can become first responder. I think this has
been broken since Big Sur broke utility panels. Issue 9431

2021-01-18: Don't try to add custom actions to the context
menu if there is an invalid click coord, as when you open
the menu from the pane titlebar.

2021-01-18: Don't attempt to extract a URL from invalid
coordinates (-1,-1) if context menu is opened from the
session titlebar (#434)


2021-01-18: Fix file descriptor leak in iTerm2. Issue 9430

* Close file descriptor when
iTermFileDescriptorMultiClientChild gets dealloced. This
fixes a file descriptor leak.  * Invoke all wait callbacks
from handleWait:. Failing to call the one added in
fileDescriptorMultiClient:childDidTerminate: caused a leak
of iTermFileDescriptorMultiClientChild.  * Add a call to
brokenPipe in finishAttaching:task: for jobs that terminated
while iTerm2 was not running. This ensures you get the
"session ended" banner on terminated restored sessions and
orphans.  * Add support for tracing iTermCallback.

2021-01-17: Fix file descriptor leak in iTermServer. Issue
9430

2021-01-17: Fix a bug where doublecliking on a session
titlebar didn't maximize tmux panes correctly. Issue 9428

2021-01-17: Fix a bug where the big sur fullscreen white
line workaround left an empty spot at the top of the screen
in minimal after hiding the tabbar

2021-01-17: Disgusting hack to remove titlebar divider when
there's a top tabbar. Issue 9424.

2021-01-17: Fix colors of dark tabbar on big sur.

2021-01-17: Fix shortcut for zoom to cmd-shift-0.

2021-01-16: Add git branch as a search feature for open
quickly

2021-01-16: Expose git repo state (merging, picking, etc.)
and show in the status bar.

2021-01-16: Use libgit2 to fetch list of recent branches
when you click on the status bar component

2021-01-16: Use libgit2 instead of shelling out to git for
the status bar git component.

2021-01-15: Add menu command to create a new window with the
current profile (#433)


2021-01-15: Add prefs to make left/right option keys
changeable by decset 1036. Issue 8195

Also update Python profile.py and its sphinx docs, which
were out of date.

2021-01-10: Add debug logging to indicate whether we
detected a password prompt

2021-01-10: Fix crash when clicking on git component because
completion block got called twice

2021-01-10: Add support for HDR cursor. This isn't ready for
prime time because it only works in the metal renderer and
only works when the cursor color is pure white. It's mostly
for me to play around with to see if it's worth shipping.

2021-01-10: Fix warning

2021-01-09: Create CODE_OF_CONDUCT.md 2021-01-08:
Experimental (beta only by default): add support for decset
1036. Issue 8195

2021-01-08: When you cmd-drag drop a file, cd to its
containing folder. Issue 9412

2021-01-05: Respect do-not-remap when secure input is
enabled. Issue 9401

2021-01-05: Restore window's miniaturization state. Issue
6627

2021-01-04: Commit daed41c33dffbcf6520f8d4429a0f3e6e2576af7
introduced a bug because it treated initial windows the same
as anonymous windows, causing them to always open in the
attaching tab. Adding to the confusion is that it didn't
take commit 8d92dd6e05 in to account. This commit explicitly
labels windows as anonymous and uses the advanced pref added
daed41c in for them while respecting the user's setting for
the initial attach. Issue 9403

2021-01-04: When a tab drag exits the tabbar select the
previously selected tab. If the current tab is being
dragged, select the next one if possible otherwise the
previous one. Fixes a problem where you couldn't drag
another tab into a split pane in the current tab. Brought up
in mailing list subject 'New tab-drag behavior: Bug or
feature'

2021-01-04: Clarify how to verify signature in changelog

2021-01-03: Fix how the hash is signed by gpg.

2021-01-03: Add 'Copy Link Address' to context menu. Issue
9397

2021-01-03: Don't attempt path completions in composer in
tmux integration. Maybe some day.

2021-01-03: Add history suggestions to composer. Do not
suggest filenames when not on localhost

2021-01-03: Fix support for quoting in completion
suggestions

2021-01-03: Add rudimentary completion abilities to the
composer

2021-01-02: Support command history via composer in the
absence of shell integration

2021-01-02: Change explainshell shortcut to include option
to avoid conflicting with system shortcut

2021-01-02: Add a button in composer to open explainshell

2021-01-02: Eliminate composer popover and use dropdown
composer as the expanded form of the status bar composer.

2021-01-02: Fix appearance of tab colors menu in dark mode.
Make the 'no color' selection a box with a slash intead of
an X for consistency

2021-01-02: Add support for command history to large (aka
dropdown) composer view.

2021-01-01: Break iTermPopupWindowController's dependency on
PTYTextView

2021-01-01: Make Cmd-shift-. keyboard shortcut open the
dropdown composer rather than the popover.

2021-01-01: Remove iTermTextFixup, which is no longer needed
because its only purpose is to deal with background colors
for cells that overlap their neighbors and the previous
commit eliminated the use of background color in the text
renderer (the fragment shader samples when this is needed)

2021-01-01: Don't pass background color to text Metal
renderer because it does not need it.

2021-01-01: Fix a bug where we used transparent as the bg
color for the default background color in the GPU renderer
when computing minimum contrast. This commit changes it to
use the actual background color for the minimum contrast
calculation and then use transparent everywhere else. Issue
9387.

2021-01-01: Avoid burning CPU when we're waiting for GPU
resources to become free. Issue 9393

2021-01-01: Attempt to include pgp signature in changelogs

2020-12-31: Make send-snippet a keybinding action.

2020-12-31: Fix autoresizing masks in shortcuts prefs
windows. Issue 9396

2020-12-30: Build ShellLauncher and iTerm2SandboxedWorker as
universal binaries. Issue 9389

2020-12-30: Use reduced scroll speed (pre-8e0b552) for mouse
reporting. Issue 9394

2020-12-30: Revert "Reduce max frames in flight to 1 to
prevent crashes"

This reverts commit
cdf0f64d5a5ffef5a3af56841f29cbd43e8d0f19.

2020-12-29: Fix a bug where newly added snippets were not
selectable by menu item

2020-12-29: Add emoji picker to allowed touch bar items.
Request in email subject line 'iTerm2 Emoji Picker in
TouchBar Option?'

2020-12-29: Add debug logging for my problem where cmd-opt-U
sometimes does nothing

2020-12-29: Fix tiled images by removing debug code

2020-12-29: Escape ShellLauncher in command line of
/usr/bin/login

2020-12-29: Log stack trace to brokenPipe

2020-12-28: Add debug logging to launch flow in multiclient

2020-12-27: 3.4.4beta1

2020-12-27: Make trackpad scroll faster, treating
scrollingDeltaY with precise deltas as lines rather than
points. This is a closer match to other macOS apps. Issue
9386

2020-12-27: Take alpha into account when runlength encoding
background colors. Issue 9384

2020-12-27: Hack on various code signing things for the
sandboxed worker to unbreak adhoc builds

2020-12-27: Add advanced pref to work around big sur bugs
with titlebar accessories. Issue 9199

2020-12-27: Decode images in XPC service. See PR 432.

Most of the work by Benedek Kozma <cyberbeni@gmail.com> with
miscellaneous changes for style by me.

2020-12-24: Make legacy renderer clear the screen before
drawing to avoid artifacts. Issue 9352

2020-12-24: Adhoc build 3.4.20201214_221534

2020-12-24: When miminal split pane prominence is 0 and
inactive split panes' backgrounds are dimmed and all
inactive sessions have the same background color, make
dividers the background color of inactive sessions so they
disappear. Issue 9327.

2020-12-22: Use ~/.config/iterm2 instead of ~/.iterm2 for
AppSupport. Also, don't return nil from homeDirectoryDotDir
if it had to create the directory. Issue 9362

2020-12-22: Fix a bug where the top margin could be the
wrong color by making TextViewWrapper always draw itself
clear in drawRect. Issue 9327.

Also: - Remove some dead code - Fix a bug where toggling
"panes have separate background images" would leave some
panes with per-pane images.

2020-12-21: Use ~/.iterm2/AppSupport intead of
~/Library/ApplicationSupport.

2020-12-21: Prevent PTYTextView from getting mouseUp: when
you click in the search field. Issue 9370

2020-12-19: Support openbsd-style tmux version numbers. See
mailing list thread 'tmux on OpenBSD6.8 breaks tmux
integration'

2020-12-19: Vacuum and checkpoint WAL after loading records
from db to avoid delaying window restoration.

2020-12-19: Checkpoint WAL and vacuum
restorable-state.sqlite at startup. Also close the resultset
from the integrity check ot make vacuum possible. Issue 9360

2020-12-19: Use the correct background color for big sur in
light mode. It was using the dark mode values for both. The
consequence was that text in non-selected tabs with no tab
color when there was a colored tab would be the wrong color.
Issue 9367

2020-12-18: Ignore all Default_Ignorable characters, not
just zero width spaces. Issue 9368

2020-12-18: Fix JSON escaping of NUL characters. Issue 9371

2020-12-16: Add U+200b and U+2060 as zero-width spaces.
Issue 9368

2020-12-14: Downscale huge background images to no more than
5k per axis. Issue 9346

2020-12-12: Fix misalignment in shell integration installer
in download and run view. Issue 5919

2020-12-12: Update find pasteboard immediately after the
user modifies the search field. Issue 8425, comment by detj

2020-12-11: When the status bar is in the per-pane title
bar, drags should move the pane, not drag the window. Make
option+drag on a status bar always move the window. Increase
the area where we detect click gestures on status bar
components to include not just the component's inner view
but the container with the icon. Issue 9355

2020-12-11: Prevent out of bounds access in Advanced prefs

2020-12-10: Clear the existing command when one is present
by sending ^U ^K when opening the composer. Remove the
sendCommand: call on resign first responder that doesn't
seem to do any good. Issue 9348 and others I can't find at
the moment.

2020-12-10: Avoid creating spaceless app support directory
if the user doesn't want it simply because they have a
Scripts folder.
https://github.com/gnachman/iTerm2/commit/10df56f95252608bf6eaa948938d9167ebc0451d#diff-75f50c319d6e8bfc28bb3c606081a0fb16416590476a84bd30e93ad2e01d97e0

2020-12-10: Speed up loading of background images. Issue
9346

2020-12-08: Fix improper handling of python output with
empty lines

2020-12-08: Reduce max frames in flight to 1 to prevent
crashes

2020-12-07: Don't crash if a trigger has a param of the
wrong type when the trigger matches

2020-12-07: Fix various bugs in Add Triggers context menu.
It didn't record the values of text fields properly, leading
to a crash

2020-12-07: Set ShellLauncher's deployment target to 10.14

2020-12-06: Move shell launcher into its own binary to
improve performance when using a custom shell

2020-12-06: Silence warning and add better assertion message
to advanced settings

2020-12-06: Add missing completion calls to script history
addOutput calls

2020-12-06: Reenable metal stats

2020-12-06: Add metal capture to gpu capture. Motivated by
issue 9325

2020-12-05: Give backpressure to
iTermBackgroundCommandRunner when processing output is slow.
Run Command triggers could hang the whole app by producing
lots of output. Issue 9337

2020-12-05: Make size of edge drag region configurable in
minimal and compact. Issue 8123

2020-12-05: Catch exceptions when writing to the tmux pipe.
Issue 9339

2020-12-03: Add advanced pref to turn off shortcut accessory
view controller. Issue 9332

2020-12-03: Add option to save prefs to remote folder
automatically. Issue 9335

2020-12-01: New tmux windows created outside iterm2 (e.g.
with tmux new-window) become tabs in the current window.
Issue 6400

2020-12-01: Make window movable when exiting traditional
fullscreen. Fixes a bug where windows whose profile window
style is fullscreen can't be dragged after exiting
traditional fullscreen

2020-12-01: Create spaceless app support symlink when
creating the scripts menu if any scripts exist.

2020-12-01: tmux integration windows should enter full
screen when the profile specifies the fullscreen window
type. Otherwise you end up with a regular looking window
that can't be dragged
