2020-12-21: Use ~/.iterm2/AppSupport intead of
~/Library/ApplicationSupport.

2020-12-21: Prevent PTYTextView from getting mouseUp: when
you click in the search field. Issue 9370

2020-12-19: Support openbsd-style tmux version numbers. See
mailing list thread 'tmux on OpenBSD6.8 breaks tmux
integration'

2020-12-19: Vacuum and checkpoint WAL after loading records
from db to avoid delaying window restoration.

2020-12-19: Checkpoint WAL and vacuum
restorable-state.sqlite at startup. Also close the resultset
from the integrity check ot make vacuum possible. Issue 9360

2020-12-19: Use the correct background color for big sur in
light mode. It was using the dark mode values for both. The
consequence was that text in non-selected tabs with no tab
color when there was a colored tab would be the wrong color.
Issue 9367

2020-12-18: Ignore all Default_Ignorable characters, not
just zero width spaces. Issue 9368

2020-12-18: Fix JSON escaping of NUL characters. Issue 9371

2020-12-16: Add U+200b and U+2060 as zero-width spaces.
Issue 9368

2020-12-14: Downscale huge background images to no more than
5k per axis. Issue 9346

2020-12-12: Fix misalignment in shell integration installer
in download and run view. Issue 5919

2020-12-12: Update find pasteboard immediately after the
user modifies the search field. Issue 8425, comment by detj

2020-12-11: When the status bar is in the per-pane title
bar, drags should move the pane, not drag the window. Make
option+drag on a status bar always move the window. Increase
the area where we detect click gestures on status bar
components to include not just the component's inner view
but the container with the icon. Issue 9355

2020-12-11: Prevent out of bounds access in Advanced prefs

2020-12-10: Clear the existing command when one is present
by sending ^U ^K when opening the composer. Remove the
sendCommand: call on resign first responder that doesn't
seem to do any good. Issue 9348 and others I can't find at
the moment.

2020-12-10: Avoid creating spaceless app support directory
if the user doesn't want it simply because they have a
Scripts folder.
https://github.com/gnachman/iTerm2/commit/10df56f95252608bf6eaa948938d9167ebc0451d#diff-75f50c319d6e8bfc28bb3c606081a0fb16416590476a84bd30e93ad2e01d97e0

2020-12-10: Speed up loading of background images. Issue
9346

2020-12-08: Fix improper handling of python output with
empty lines

2020-12-08: Reduce max frames in flight to 1 to prevent
crashes

2020-12-07: Don't crash if a trigger has a param of the
wrong type when the trigger matches

2020-12-07: Fix various bugs in Add Triggers context menu.
It didn't record the values of text fields properly, leading
to a crash

2020-12-07: Set ShellLauncher's deployment target to 10.14

2020-12-06: Move shell launcher into its own binary to
improve performance when using a custom shell

2020-12-06: Silence warning and add better assertion message
to advanced settings

2020-12-06: Add missing completion calls to script history
addOutput calls

2020-12-06: Reenable metal stats

2020-12-06: Add metal capture to gpu capture. Motivated by
issue 9325

2020-12-05: Give backpressure to
iTermBackgroundCommandRunner when processing output is slow.
Run Command triggers could hang the whole app by producing
lots of output. Issue 9337

2020-12-05: Make size of edge drag region configurable in
minimal and compact. Issue 8123

2020-12-05: Catch exceptions when writing to the tmux pipe.
Issue 9339

2020-12-03: Add advanced pref to turn off shortcut accessory
view controller. Issue 9332

2020-12-03: Add option to save prefs to remote folder
automatically. Issue 9335

2020-12-01: New tmux windows created outside iterm2 (e.g.
with tmux new-window) become tabs in the current window.
Issue 6400

2020-12-01: Make window movable when exiting traditional
fullscreen. Fixes a bug where windows whose profile window
style is fullscreen can't be dragged after exiting
traditional fullscreen

2020-12-01: Create spaceless app support symlink when
creating the scripts menu if any scripts exist.

2020-12-01: tmux integration windows should enter full
screen when the profile specifies the fullscreen window
type. Otherwise you end up with a regular looking window
that can't be dragged

2020-11-30: Allow window.representedURL to be set in
minimal/compact but hide the proxy icon so that
accessibility will be happy. Issue 7558 (redux)

2020-11-30: Fix bugs where callbacks were run on the wrong
queue. Hopefully fixes crash mentioned by javasgl in issue
9116.

2020-11-30: When you split a pane in tmux and focus follows
mouse is on, don't make the pane under the cursor key due to
a mouseEnter: on it. Issue 9322

2020-11-30: Bump minimum python environment version to 71 to
force everyone to get spaceless app support paths in the
modified files

2020-11-28: Bump Python API version

2020-11-28: Add findps example.

2020-11-28: Revert "Do away with ApplicationSupport."

This reverts commit
c4c43c5ff60b639faebb49114065d6bb5c87db59.

2020-11-28: Turn off caching for python runtime downloading
because the cloudflare disaster caused 301s to be cached

2020-11-27: Add PreventEscapeSequenceFrom* to exempt keys
for remote prefs. Issue 9315

2020-11-27: Sanitize infinities in __knobs JSON sent to
status bar components. This unbreaks custom status bar
components, which were broken by changing the default max
width to infinity. Issue 9313

2020-11-27: Be less aggressive about showing what's new.
It's now only for upgrading users.

2020-11-27: Save restorable state when Sparkle is about to
upgrade you, even if you generally have state restoration
turned off in system prefs. Issue 9312

2020-11-27: When copying server over, try ~/.iterm2 if
application support is not writable. Also ensure the socket
folder is writable before trying to start the daemon. Issue
9307.

2020-11-26: Don't show an alert if the initial tmux command
fails. Issue 8596

2020-11-26: Fix user-supplied URLs with many components.
Issue 9305

2020-11-26: Don't allow swipe between tabs when there is
only one tab. Issue 9303

2020-11-26: Fix Move Session to Window in context menu.
Issue 9302

2020-11-26: Turn off enabling modifyOtherKeys=2 by control
sequence support by default.

2020-11-26: In Python, send KeystrokeFilterRequest instead
of KeystrokeMonitorRequest when filtering keystrokes. In
main app, accept either. Issue 2010

2020-11-26: Fix warnings

2020-11-26: Add debug logging for issue 9286

2020-11-26: Tolerate a missing profile when restoring an
arrangement.

2020-11-24: Add Host: header to crash reports to make
Cloudflare happy

2020-11-23: Purge cloudflare cache of /nightly/latest after
rebuilding it.

2020-11-23: Fix ssh addreess in nightly.sh

2020-11-23: Cmd-w to dismiss composer. Issue 9291

2020-11-23: Use terminal background color to determine
appearance of composer. Issue 9291

2020-11-21: Fix signed/unsigned comparison that caused beta
assert. Issue 7446

2020-11-21: Add a profile setting to prevent control
sequences from enabling modifyOtherKeys

2020-11-20: Fix crashes in accessibility handlers going out
of bounds

2020-11-20: Change how we handle control keys in
modifyOtherKeys=2 mode. We want to always send a control
sequence for them, even if other modifiers besides control
are pressed. On some keyboards, you need to press
control+opt+something to get control+somethingelse; for
those, hide the opt and treat it like control+somethingelse.
See Elias's comments on Issue 9279

2020-11-19: Fix shortcut for composer in tip of the day

2020-11-19: Don't daemonize iTermServer.

It doesn't seem to be necessary. I tested logging out and
back in, fast user switching, and applescript. I was focused
on not regressing on issue 9000 (activity monitor shows
process not responding; that was because we connected to the
window server but didn't run an event loop) and issue 8986
(applescript doesn't work, I think also because of the
window server connection).

This should fix issue 9276 where BBEdit wants to look at the
parent process of the shell to find the cocoa app that owns
it.

The new behavior is similar to what the monoserver did, so I
can't think of why it wouldn't work. I look forward to being
surprised.

2020-11-19: Handle short writes correctly in
iTermFileDescriptorClientWrite

2020-11-19: Don't show short-lived session warning in tmux
integration when creating a new tmux session.

2020-11-19: Soft-close when detaching from tmux. This
prevents panes from getting killed when switching the active
session. Issue 9277.

2020-11-19: Lie and say that windows are movable during menu
item validation in a terminal window so that Window > Move
to [display] will be enabled. Issue 9278.

2020-11-19: Ensure no double callback when the server closes
the connection just before we send a launch request. The
read callback would detect the EOF and invoke completion
callbacks on pending requests and then remove all pending
launches. Then the send would fail, causing its completion
block to run the pending-launch callback. This ensures that
we only run the pending launch callback if the pending
launch still exists, and ensures we remove it before
invoking its callback. Also handle EAGAIN properly in
iTermFileDescriptorClientWrite and its callsites. Issue 9266

2020-11-18: Add debug logging for untitled window opening

2020-11-18: Add logging to untitled window state machine

2020-11-18: Don't set tmux client size to less than 2. Issue
9274

2020-11-18: Fix background color blending in GPU renderer.

It did not implement the two-layer model correctly. The
model is that there's a view with the default background
color that non-default colors are rendered over top of.

The main change is to perform this blending in the
background color renderer's vertex shader.

This commit also fixes a problem where we'd update the
iTermImageView's content for no reason when switching panes
which made it very slow.

Also fixes a bug where iTermImageView would become visible
when you twiddle the blending slider even though the GPU
renderer was on.

I discovered this because of issue 9245, although it's
probably not what the issue's creator was hoping for.

2020-11-18: Handle EAGAIN properly in
iTermFileDescriptorClientWrite and in its callsite. Issue
9161

2020-11-18: Fix scp in adhoc

2020-11-18: Fix scp host in adhoc.sh

2020-11-18: Don't use application keypad-style arrow keys
when application cursor mode is on.

Commit ac1aa575011028ed86851c15b177b0e9c78082e0 introduced
this behavior as part of implementing modifyOtherKeys=2
mode. The reason why was not recorded.

This breaks vim (issue 9273).

The current behavior now matches xterm. This is what xterm
does:

normal                                CSI D app cursor keys
SS3 D modifyOtherKeys=2                     CSI D
modifyOtherKeys=2 + app cursor keys   SS3 D

I also tested against emacs running in tmux, which came up
in issue 9161. In that issue, I wrongly state that "It looks
like either tmux or emacs doesn't want the SS3 arrows even
in application cursor mode". When I run emacs in tmux, it
does use app cursor mode and emacs handles the SS3 arrows
just fine.

2020-11-17: Reduce minimum dimming amount to 0.01. Issue
9270

2020-11-17: Fix support for $$$$. In profile commands it
should be replaced with $$. The replacement was done too
early. This triggered an unrelated issue where an
unterminated $$varname$$ caused a crash. Issue 9271

2020-11-17: Set the root terminal view's imageview's
transparency on 10.16. Delete some dead pre-Mojave code.
Fixes a bug where on Big Sur transparency doesn't work with
background images.

2020-11-17: Fix opaque top/bottom margins from issue 9257

2020-11-17: Update shell integration. At commit
b8fc99adca91fb2a783120c8981b0803a4859dbf in iterm2-website

2020-11-17: Handle EAGAIN in
iTermFileDescriptorMultiClient.tryWrite. Issue 9266

2020-11-17: Check if system python has an old installation
of the iterm2 module and help user upgrade it. Issue 9258

2020-11-17: Add u+251c and u+2524 (|- and -|) to column
dividers. Issue 9261

2020-11-17: Fix poor performance on window resize with
background image. Issue 9260

2020-11-17: Fix right click. Issue 9259

2020-11-17: Fix escaping of path in applescript command that
creates the noauthMagic file. Issue 9255

2020-11-17: Fix a bug where the window title was not shown
in the window titlebar when the tabbar was invisible. Issue
9253

2020-11-16: Add async_add_annotation to Python docs

2020-11-16: [python, api] Add Session.add_annotation(range,
text). Issue 8111

2020-11-16: Make margins adjustable in
prefs>appearance>panes, remove from advanced prefs.

2020-11-16: Add back git pushes to release_stable.sh

2020-11-16: Validate selectors for smart selection actions
in textview context menu. Issue 9249

2020-11-15: Log timestamps in plain-text logs

2020-11-15: Fix shifted underline in GPU renderer. The
cellOffset is pixels from the window's left edge. The
cellSize is typically smaller than the glyphSize. So it is
not safe to add cellSize to cellOffset without including the
extra padding added by the glyphSize. Issue 9242

2020-11-15: Add support for HTML in tab titles.

2020-11-14: Keep tab icons left aligned. When the tab close
button is shown, replace the icon with it. Issue 7990

2020-11-14: Let xcode have its merry way with project files

2020-11-14: Leave an empty area at the top for lion
fullscreen in big sur, because in that case the tabbar is a
titlebar accessory. Issue 9238

2020-11-14: Apply hack from preceding commit to runtime
downloader and migration helper

2020-11-14: Work around Big Sur bug where alerts don't
resize in a single call to layout. Issue 9240

2020-11-13: Work around an apparent bug in Big Sur where
NSURLSession downloads fail with 'the network connection was
lost' for no good reason. Try to resume up to 10 times. If
this catches fire it could be because a user is MITMed by
their employer with a proxy that doesn't handle resumes
correctly. Issue 9236.

2020-11-13: Confirm deletion from password manager

2020-11-13: Hide tab close button on inactive small tabs

2020-11-13: Turn on select tabs on mouse down by default.

2020-11-13: Reduce calls to PSMTabBarControl.update to
improve performance when changing settings that affect lots
of tabs (e.g., colors)

2020-11-13: Cache progress indicator frames for better
performance when creating lots of tabs. Defer calls to
PSMTabBarControl.update from progressIndicatorNeedsUpdate to
improve performance when creating/removing lots of tabs

2020-11-13: Improve performance of opening lots of tabs at
the same time by deferring calls to PTYTab.setObjectCount,
which is surprisingly slow. Also fix animations for tab
progress indicators when moving the tab to another position
in the window

2020-11-13: Check for bogus count before updating DB

2020-11-13: 3.4.0

2020-11-12: Enable new tmux window/tab menu items when no
window is key but there is exactly one tmux connection. This
makes it easier to open a tmux window on a Space with no
iterm2 windows. Issue 9227.

2020-11-12: Increase max blur on 10.15+. Issue 9229

2020-11-12: Respect CSI u for arrow keys. See mailing list
thread 'The key <F4> cannot be used for key binding in vim'
(which prompted the change due to vim using CSI u mode,
which was itself a bad idea) and then see issue 9228

2020-11-12: Bump min version of python API to 70 to make
everyone on a version that was only used by betas of 3.4
upgrade to the same version as people running non-beta
versions

2020-11-12: Fix release-iTerm2.plist which used
SUPublicDSAKeyFile instead of SUPublicEDKey as the key for
the EdDSA key

2020-11-12: 3.4.0

2020-11-12: Fix width of edit session preference panel on
big sur. It was too wide because it used the width of the
regular prefs panel

2020-11-12: Change release_stable to update final_new.xml

2020-11-12: Add composer image

2020-11-11: Add onboarding images

2020-11-09: Bump Python API version to 1.17

2020-11-09: Update menu IDs

2020-11-08: Update whats new window for 3.4

2020-11-05: Fix (hopefully!) a bug where sendmsg failed with
EMSGSIZE despite the message not exceeding IOV_MAX. When it
fails in this way you end up with a daemon that can't be
attached to.

2020-11-04: Set client size when initializing tmux
connection so that when opening tabs in the same window as
the gateway, the window will not resize. I can't tell why I
made doing refresh-client -C conditional on not having
variable-size windows. I tested attaching to tmux with
restoring tmux tabs in  a new window and as tabs in the
gateway window and this works better in both configurations.
Issue 9196

2020-11-04: Change how perceptual distance is calculated for
new trigger colors to use only lightness. The dumb old Delta
E formula doesn't seem very good for comparing pairs of dark
colors.

2020-11-01: Remove name field from add trigger dialog
because it is not used. Fix a crash when adding a trigger to
a profile with none

2020-11-01: Fix square corners bug
