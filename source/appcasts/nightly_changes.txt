2021-03-02: Fix snapshots by working around AppKit bug. This
fixes mostly clear images when dragging a tab.

2021-03-01: Bounce metal when a window changes screen. I was
able to reproduce the problem described in issue 9515. The
view hierarchy was fine, but the metal view was broken for
some unknown reason. Issue 9515.

2021-03-01: Fix incorrect test for PTY exhaustion which
casued an assertion failure. Issue 9517

2021-02-28: Remove HTML from session names in various
places. Issue 9512.

2021-02-25: Fix legacy renderer's handling of background
images with non-opaque parts. Issue 9011

Non-opaque background images would show the window
background color in the legacy renderer. In the GPU renderer
they would be completely wrong because the fragment shader
had a bug (alpha was assigned to w rather than multiplying
w).

The architecture is now:

LEGACY RENDERER iTermImageView is a container. It has two
subviews.  The lower view is iTermImageBackgroundColorView.
This is a 100% alpha view with the default background color.
On top of that is iTermInternalImageView. It shows the
image, also at 100% alpha.

Normally, the image is completely opaque and
iTermImageBackgroundColorView is completely obscured by
iTermInternalImageView. But if it does have any non-opaque
pixels, the default background color is behind the image as
a backstop.

Since the session might be transparent, iTermImageView
itself will have an alphaValue that comes from
iTermAlphaValueForBottomView.

On top of all this is iTermSessionBackgroundColorView. Its
alpha value comes from iTermAlphaValueForTopView.

GPU RENDERER Blend the default background color at alpha=1
with the image sample in the fragment shader for background
image rendering. Then multiply that value by alpha. This is
identical to the legacy renderer's algorithm, but in a lot
less code :)

2021-02-24: If the home directory dotdir can't be created,
show a warning exactly once and disable all features that
need it.

2021-02-24: Try to prevent changing TTY's size when
switching away from a newly created tab. Instead, set the
size once the view size is known for sure. I think this was
causing the activity indicator to spin in issue 9099. See
debug log sent by email with subject 'issue 9099 - tab
activity always active'

2021-02-21: Tell xcode to shut its gobhole about project
settings

2021-02-21: Fix duplicate identifier in main menu

2021-02-21: Preserve already-precent-encoded parts of query
params in URLWithUserSuppliedString. Issue 9507

2021-02-21: Add support for Kitty's disambiguate escape
codes feature. Issue 9506

2021-02-17: Fix some bugs in broadcast to panes in current
tab. The model was muddled. I think what it was mean to be
is: this broadcast mode is enabled on tabs, not on the
window. Other modes are enabled on the window, and when
selected reset the per-tab setting and supercede it. Now
when you toggle it, it will enable/disable the setting for
the current tab. If doing so disables it for all tabs in the
window then the mode is reset to off. Meanwhile, the checked
item in the menu takes the current tab into account when
choosing between 'off' and 'all panes in current tab'. Issue
9492

2021-02-17: Assign GUIDs to snippets and use them to
identify actions. Includes a migration path for existing
actions that use title as the identifier. Title can be
ambiguous (see email with subject "Snippets broken with last
iTerm2 version").

2021-02-16: Update fish shell integration script to v12

2021-02-14: Recheck blur when updating tab bar style (#437)

When changing the tab bar theme in Preferences > Appearance
> Theme, all active windows lose their blur until each
window is clicked individually or regains focus. This
re-enables blur after changing the tab bar theme.
2021-02-13: Add soft hyphen to the set of unicode dashes for
advanced paste's 'convert unicode punctuation' feature.
Issue 9497

2021-02-13: When using the default background color in the
GPU renderer, set the unprocessed background color correctly
except set the alpha to 0. This allows
useThinStrokesWithAttributes to get the right inputs.
Previously it would appear to be black which made it do
silly things for light backgrounds in the retina-only
configuration. Issue 9486

2021-02-12: Prevent fractional image sizes which break
creating a bitmap context and a subsequent crash in the
badge renderer. Issue 9490

2021-02-12: Don't vertically flip tab icons on 10.14. Issue
9496

2021-02-12: Remove stray word

2021-02-11: Assert that texture buffer creation succeeds to
make sense of 9490

2021-02-11: Add an advanced pref to disable animating status
bar graphs. Issue 9489

2021-02-10: Remove html tags from window title and tab
tooltip. Also fix the profile name in the tab tooltip which
was wrong for sessions with customized names. Issue 9488.

2021-02-10: Tolerate failure to create a bitmap context in
rawDataForMetal. Issue 9490

2021-02-10: Try ~/.iterm2 if ~/.config/iterm2 doesn't work
to try to prevent crashes like issue 9493. If both fail show
an alert explaining what went wrong before crashing.

2021-02-10: When 'close windows when app quits' is on for
some reason we still get a window restoration request to
PseudoTerminalRestorer. Previously the completion block was
never run. This blocked the creation of any windows, leaving
the app wedged.

2021-02-09: Fix downscaling of images in Metal renderer.
Issue 9475

2021-02-08: Fix tooltip for html titles prefs checkbox.
Issue 9485

2021-02-07: Add GPG signing to release_stable.sh

2021-02-07: When restoring an arrangement adjust the
window's width up or down if scroller style has changed
since it was saved. This will only affect newly saved
arrangements. Issue 9479

2021-02-07: Include hardware model, screen farmes, and OS
version in debug logs

2021-02-06: Turn on scrollback with status bar by default.
Terminal has this, and I don't see how it would break
anything. It being off caused issue 9463

2021-02-06: Respect continuation characters (backslash in
last column, as used in emacs) which was lost in
7e4b5eb770ed951cf67a705cbb969632f7b0b41a. I don't know why
that commit removed it; it seems to work fine. Issue 9478

2021-02-06: Fix a bug where a window forgot it was blurred
when toggling traditional fullscreen in Minimal theme. Issue
9477.

2021-02-06: Add window > move session to window. Issue 9476

2021-02-06: Fix keystroke filtering, which seems to have
been broken :(. See issue 9214

2021-02-05: Move legacy text drawing into a separate view.

Also, fix problems where bg color & image views had wrong
alpha in full screen sometimes.

2021-02-04: Fix a bug where disabling
middle-click-to-close-a-tab also breaks the tab close
button. Issue 9470

2021-02-04: Retain _font in ProfileListView. Issue 9446

2021-02-04: Update menus when trying to select a menu item
by shortcut to ensure their enabled status is correct. Issue
9328

2021-02-04: Add include

2021-02-04: Make background color view's background color
always opaque when in Lion fullscreen. This fixes the bug
where transparent panes in fullscreen are lighter than they
should be.

Update window background color after exiting full screen so
that the window will not be opaque if the front tab is
transparent. This fixes the bug where creating a new tab and
then exiting fullscreen leaves you with an opaque gray
background.

Issue 9462

2021-02-03: Fix a bug introduced waaaay back in 5f1fa63
where mouseDown was renamed to _mouseDown but Apple
*awesomely* has a global symbol named mouseDown and I missed
two of them. The effect of this change is intended to be to
ignore mouseUp when called more than once in a row. I don't
think it will have a big effect, but who knows - mouse
events are crazy and there will probably be unexpected
consequences. This commit also copies text when ending live
selection to avoid problems as seen in issue 9461 where a
trackpad did nutty things and a mouse-up that was (probably)
misidentified as a three-finger touch (in part because of
the mouseDown bug) ended live selection but didn't copy.

2021-02-02: Turn on fastTrackpad because of confirmation by
dylan71 in issue 9427 that the fix in
d7d63c3e34d2a3386dd92856545c4e526861bf9a worked.

2021-02-02: Don't wait more than 100ms for a swipe after
phase=MayBegin. It looks like some pointing devices send a
scroll event like <NSEvent: 0x600000868410 phase=MayBegin,
momentumPhase=None, scrollingDeltaX=0.000000> and never
follow it with begin/cancel. Issue 9306.
