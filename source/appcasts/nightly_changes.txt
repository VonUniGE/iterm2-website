2020-06-23: Refactor tmux response handling. Fix a bug where
if a command early in a list with a nil target got an error
then the rest of the list would not be canceled, causing a
hang.  Tolerate errors from refresh-client -C. Issue 8943.

2020-06-23: Fix logic for adjusting tmux layout. If the root
view is larger than the flexible view, you really have to
resize it or content will be outside the visible bounds. If
it's smaller by more than one cell, that should also be
fixable.

2020-06-21: Remove Travis. It's broken beyond repair.

2020-06-21: Make window borders 1 pt thick in dark theme.
See email with subject line 'Iterm2 border wider than one
pixel'

2020-06-21: Add xscode link

2020-06-21: Fix failing test

2020-06-21: Remove more ruby crap to get travis working

2020-06-21: Fix a bug where ThreeFingerTapGestureRecognizer
incorrectly looked for >3 touches on the *previous* count of
touches rather than the current count. That allowed a
four-finger tap to be treated as a three finger tap, which
causes quicklook activations when swiping between desktops.
Issue 8955

2020-06-21: Stop using ruby in CI because both Ruby and
Travis are kinda broken. Travis fails while trying to
install libxml, which seems to be related to ruby. This
loses code coverage, but I didn't even know we had that...

2020-06-21: Switch a bunch of experimental features to
always on in preparation for 3.4

2020-06-21: Move master to 3.4.x

2020-06-21: Fix warning when ASAN is enabled

2020-06-21: Fix version number in warning

2020-06-21: Bump minimum python version for betas

2020-06-21: Do not accept older format .its files

2020-06-21: Fix warning

2020-06-21: Fix duplicate main menu identifiers

2020-06-21: Advertise that PTYSession conforms to
iTermTmuxControllerSession

2020-06-21: Remove duplicate references in project file,
suggested by xcode upgrade

2020-06-21: Update window opacity when the profile changes
transparency. Issue 7327

2020-06-21: Fix a bug where session logs could be corrupted.
Issue 8959

2020-06-20: Move nontrivial screen parameters change check
into presentation controller. Fix coalescing. General clean
up

2020-06-20: Avoid disabling metal when the app is activated.
For some reason we get screenParametersChanged sometimes
upon activation which causes metal to be deactivated at the
worst possible time.

2020-06-19: Disable metal during split pane dragging for
tmux sessions. Issue 8954.

2020-06-18: Fix a bug where native fullscreen is broken on
10.15.5 because we set the style mask to not-fullscreen from
refreshTerminal when the window's effective appearance
changes just before didEnterFullScreen. Issue 8945

2020-06-18: Cancel mouse reporting frustration detection
when we get a control sequence to copy to the clipboard.
Issue 8905

2020-06-18: Update presentation controller after adding or
removing a window from iTermController instead of after
initializing a full screen window. It has no effect before
the window is added to the controller. Issue 8951

2020-06-18: Add support for tmux wait-exit. See
https://github.com/tmux/tmux/issues/2246

2020-06-16: When tmux variable window sizes are in use, do
not automatically resize them. This is a little gross when
there are two clients connected and the other one does a
live resize. But other than that it's a much better
experience because the window size stays stable as you
create and destroy split panes.

2020-06-16: Fix rounding calculation for variableTmuxSize.

2020-06-16: Fix frame of metal view in tmux integration with
extra margin on the bottom

2020-06-16: Fix warning

2020-06-15: Avoid setting the style mask or frame while
toggling full screne. Issue 8945

2020-06-14: Add terminal state submenu to context menu.
Issue 8947

2020-06-14: Add a hacky workaround for the background color
view not being updated in issue. 8843

2020-06-13: Try to use autosave window frame when anchored
to a screen, provided that frame is on the proper screen.
Issue 8944

2020-06-13: cmd-click on a file: url with a fragment now
open using semantic history. If it has a #line or #line:col
fragment, it opens to that line.

2020-06-13: Invalidate app restorable state after adding a
URL to the store

2020-06-13: Make the URL hover view prettier

2020-06-13: Invalidate app restorable state after adding an
image

2020-06-13: Change CSI u mode to send control-/ but to treat
control-? as backspace. Issue 8382

2020-06-13: Fix swipe when it enters a tmux integration
session. It was using root_ when it should have been using
flexibleView_, which is the parent of root_.

2020-06-13: Fix color of about box error message. Arcify
iTermAboutWindowController.m. Sort names lexicographically.

2020-06-13: When erasing the display after the cursor or the
line after the cursor and the cursor is in the first column
make the preceding line EOL_SOFT. Issue 8938.

2020-06-13: Make IntelliJ IDEA a first class citizen of
semantic history; it is now available as an editor

2020-06-13: Fix support for older versions of tmux because
of bad minimumServerVersion check. Send pause-after=0
immediately to quell noisy panes during setup.

2020-06-12: Update shell integration utilities for website
commit 021b058

2020-06-12: Clear pause warning when silence occurs on a
pane. Fix manual unpause pane

2020-06-12: Add support for manually pausing/unpausing panes

2020-06-11: Add auto-unpause. Move warn before pausing to
general prefs

2020-06-11: Add support for %extended-output from tmux 3.2+

2020-06-11: only update buffer size time series once a
second to make the results more stable and use less cpu

2020-06-11: Fix bad cherrypick

2020-06-11: Fix a bug in how we calculate the tmux window
size for variable-size windows.

Previously, we calculated the desired tmux window size by
adding the smallest content size to the number of dividers.
That wasn't quite right, though. Sometimes you need to use
the *largest* content size instead, because that gets you a
smaller result. There was a tab like:

+-------+ |   |   | |   |   | |   +---| |   |   | |   |   |
+-------+

When the divider is thin and there's no per-pane title bar,
the window size is constrained by the tall pane because
tmux's divider is thicker than iTerm2's. The result is that
-variableTmuxSize returned a size that was a little too big.
That kicked off a vicious cycle:

1. Cause a layout change, such as by dragging a pane divider
or resizing the window. The layout size we request is too
big because of this bug.  2. Tmux sends %layout-change.  3.
TmuxWindowOpener updates the layout.  4. The flexible view
is smaller than the split view because the layout size that
came back was bigger than the window.  5. layoutIsTooLarge
return YES.  6. TmuxWindowOpener calls fitLayoutToWindows.
7. It resizes the window to its current size.  8. GOTO 2.

Issue was reported by ashturm via chat.

2020-06-10: Disable metal during tmux split drag. Fix
implementation of
sessionViewShouldUpdateSubviewsFramesAutomatically which got
negated at some point.

2020-06-10: Enable pause mode only after guessing tmux
version

2020-06-10: Fix build

2020-06-10: Finish implementing preliminary support for tmux
pause mode. Still some changes coming, like
%extended-output. https://github.com/tmux/tmux/issues/2217

2020-06-09: Fix a bug where the 'restore full screen
windows' prompt was given if there were no windows to
restore and canceling didn't reset the counter so it would
keep asking after a cancel.

2020-06-09: Fix a bug where restoring a tmux controller
didn't set the DCS unique ID so that when an invalid token
is received it wasn't able to break the parser out of the
DCS hook. Issue 8936

2020-06-09: Set echo probe duration to 0 to disable probing

2020-06-09: Update regex for http(s) URLs to ignore parens
just before and after URL. Regex by @joliss. Random entity
escaping by xcode. Issue 8925

2020-06-08: [python] Fix wrong version number in error
message, bump version to 1.14

2020-06-08: Fix path to it2run

2020-06-08: Copy nightly builds to dropbox

2020-06-06: Add dragging source support to toolbelt views
for command history, recent directories, and paste history.
Issue 8932

2020-06-06: Make multiserver cd to root when starting up in
case it's launched in a network path that disappears

2020-06-03: Remove the pause mode announcement properly when
you press a key. Unpause when attaching if tmux 3.2+ since a
pane might get paused right away

2020-06-03: Add support for tmux pause mode. Still lots of
polish needed around the UI and testing. For all the gory
details see https://github.com/tmux/tmux/issues/2217

2020-06-01: Fix build

2020-06-01: Don't append nil to debug string if the complex
character is missing. Issue 8922

2020-05-31: Keep index in search field up to date as content
scrolls off.

2020-05-29: Add mouse_test.sh

2020-05-29: Pass -N to capture-pane for tmux 3.1+ to get
trailing spaces on history and screen contents

2020-05-29: Ignore unrecognized % notifications from tmux

2020-05-29: Change 'Focus window after right or middle
click' to activate the app. Issue 4918

2020-05-28: Fix out of bounds read when debug logging is on.
Issue 8921

2020-05-28: Fix bugs in warning about can't switch to
desktop X. Issue 8920

2020-05-28: Fix memory leaks. From now on, weakSelf will
only be used once in a block because this was a terrible way
to spend an afternoon.

2020-05-28: Change how tmux integration output is routed.
Rather than calling threadedReadTask: from the tmuxQueue,
write to a pipe from tmuxQueue. The read end of the pipe is
like any other session in TaskNotifier, except that it
doesn't accept writes. This provides backpressure so that we
don't buffer too much data from tmux. That won't make a
difference to tmux 3.1 but will in 3.2 when the work in
https://github.com/tmux/tmux/issues/2217 lands.

2020-05-27: When youg get %window-pane-changed for a pane
that doesn't exist yet, activate the pane if it's in the
current tab when it does come in to existence. This lets you
do  and the new pane will magically have keyboard focus.
Issue 3792

2020-05-27: Fix bugs with strikethrough text when combined
with subpixel AA where they wouldn't appear when combined
with underline. Tweak legacy renderer to make single+dashed
underline style match GPU renderer.

2020-05-27: Fix a silly scrivener's error that caused a
bunch of subpixel models to be sent to the fragment shader
even for monochrome renderers.

2020-05-26: Fix offset and thickness of curly underlines to
match between legacy and GPU renderer. Always two points
tall and at the bottom of the cell.

2020-05-26: Update copies of shell integration scripts and
utilities

2020-05-26: Don't assign new a tmux window to a profile
hotkey if its window style is lion fullscreen since hotkey
windows can't be lion fullscreen. Issue 8908

2020-05-26: Add option to eliminate mouse reporting
frustration warning. Also don't do it if there's something
on the pasteboard. Issue 8905.

2020-05-26: Add debug logging to windowShouldClose and
windowWillClose

2020-05-26: Keep focus on hotkey window that joins all
spaces when switching spaces. Issue 8903.

2020-05-26: Don't try to switch to space 0

2020-05-26: When not opening windows upon attach because
there are too many of them, save their hidden status. Fixes
some inconsistencies in the UI

2020-05-26: Double click on a hidden window in the tmux
dashboard to open it. Suggested on mailing list in thread
'tmux suggestions - remember previous windows, double-click
to unhide'

2020-05-26: Update root terminal view's title when window
becomes/resigns active. Fixes a bug where in minimal with
background windows dimmed and one tab the titlebar's
background color doesn't change when the window
becomes/resigns key.

2020-05-26: Change NSLog to DLog

2020-05-26: Allow swipe to change tabs to work when mouse
reporting is on.

2020-05-26: Add a workaround for a bug where sometimes a
frame rendered by the GPU renderer is presented but never
becomes visible.

2020-05-25: Fix mouse_reporting.sh to handle scroll wheel.
Fix how we report SGR to pass esctest.

2020-05-22: Check if you can switch spaces before trying.
Issue 8901

2020-05-21: Add more debug logging to metal driver to
diagnose frames that are presented but not visible

2020-05-21: Add some assertions to track down a crash in the
gpu key cursor renderer

2020-05-21: Respect scroll regions for inline images when
the cursor is initially inside the region.

2020-05-21: Add manual test suite for inline images

2020-05-21: Refactor inline image code

2020-05-20: Fix an assertion when attaching to a multiserver
after the PTYTask has been initialized with a monoserver

2020-05-20: Update close buttons for Catalina. Improves
their visibility generally. Issue 8897

2020-05-19: Add an advanced pref to disable window position
restoration

2020-05-19: Don't move inital tmux window when opening tabs
in existing window and the existing window had at least two
tabs. Issue 8712

2020-05-19: Fix build break

2020-05-19: Add debug logging to warnings

2020-05-19: Save last OS version in user defaults

2020-05-19: Don't change minimal tabbar outline alpha when
dimming only text. Adjust it in proportion to the dimming
amount.

2020-05-19: Increase alpha of minimal theme tab outline when
a dimmed split pane abuts the tabbar. Issue 8896

2020-05-19: Don't respect set-titles for tmux prior to 2.9,
which added support for #{T:expr}. Issue 8887

2020-05-17: Fix a bug where user notification triggers
created in 3.2.1 don't have a name in the UI. Issue 8876

2020-05-17: Fix a bug where the text extractor would
truncate the head of a prefix string but neglect to update
the coords array. Introduce iTermLocatedString to make this
kind of bug impossible. Issue 8881

2020-05-16: Add decscusr test file

2020-05-16: Use CSI > 4 ; Pp m to enable/disable CSI u and
CSI > Pm n to reset the setting. See
https://github.com/mintty/mintty/issues/881#issuecomment-629601970

2020-05-16: In CSI u mode send esc+{ for meta+shift+[ on a
US keyboard. A careful reading of the spec indicates that
you should behave like a legacy terminal for
meta+shift+key-that-produces-unicode-characters. nicm
pointed out the behavior in
https://github.com/mintty/mintty/issues/881#issuecomment-629594864

2020-05-16: Ignore dock-only changes to screen parameters

2020-05-15: Fix a bug where the dock would appear over a
nonnative fullscreen window because we aren't able to tell
which screen has the dock when our presentation options
cause the dock to be hidden; consequently, we believed the
dock was not on the same screen as a fullscren window, and
we changed the presentation option back to show it. The hack
used herein is to remember the last screen that had the dock
and assume it hasn't moved. That ought to mostly work,
unless the user does something devious like move the dock to
another screen where it is also not visible.

2020-05-15: Update presentation controller after toggling
full screen mode

2020-05-15: Add an advanced pref to disable two finger swipe
between tabs

2020-05-15: Fix swipe scroll with toolbelt. Also fix blur

2020-05-15: Fix first responder after exiting swipe to
change tabs

2020-05-14: Disable 'characters considered part of a word'
when double-click for smart selection is on. Issue 8889

2020-05-14: Add support for DECSCUSR 0 to reset cursor style
& blink to user default. Issue 8769

2020-05-14: Add some test files for DECRQSS

2020-05-14: Add limited support for DECRQSS (sgr and
decscusr only)

2020-05-14: Fix test build break

2020-05-13: Fix window border in nonretina. Issue 8886

2020-05-13: Put hidden tmux windows in the buried sessions
submenu. Issue 8884

2020-05-12: Add support for curly underlines. Issue 6382

2020-05-11: Improve handling of infinity in status bar knbos

2020-05-11: Rebuild SearchableComboView

2020-05-11: [SearchableComboView] Don't pass newlines on to
current field editor because it won't be the search field

2020-05-11: Make touchbar label/custom action statusbar
action title text field single-line only. Mitigates a bug
where pressing enter in the action picker appends a newline
to the title

2020-05-11: Fix vertical offset of action status bar
component

2020-05-10: [python] Bump version

2020-05-10: [python] Use unix domain socket if the file
exists, otherwise use TCP. Issue 8880

2020-05-10: Use unix domain socket if it exists

2020-05-10: Revert "Deprecate CONNECT_FLAGS. Avoid using
pyobjc when not necessary"

This reverts commit
da764f0761ffd31eb75e5705949762c21ea4ed5b.

This broke external install & invocation of the iterm2
module.

2020-05-07: Avoid creating ApplicationSupport during startup
so that it won't be created if you don't use the API. Issue
8141

2020-05-07: Send arrow keys for scroll wheel when in soft
alternate screen mode

2020-05-07: Remove unordered_map from iTermColorMap and turn
it back into obj-c. There were a number of double-frees
while destroying the unordered map. I don't see how I'm
misusing it, but if I had a nickel for every time c++
shivved me in the back I'd still hate the sob

2020-05-06: Treat pressing enter in the search field of
ProfileListView as a double click on the selected or or on
the only row if none is selected. Issue 8875

2020-05-06: Log keyboard type when remapping

2020-05-06: Ignore dock clicks that activate the app instead
of hiding open hotkey windows. Issue 8869

2020-05-05: Clarify wording of advanced prefs for
controlling how colors are copied. Issue 8870

2020-05-05: Simplify retina rounding for views not in the
view hierarchy for issue 8868

2020-05-05: Suppress short-lived session warning if closing
because of detach

2020-05-04: Fix crash where a divorced session had a profile
whose GUID was in shared, not sessions ProfileModel.

The repro steps are: 1. Create a new window 2. Cmd-+ to
increase font size 3. Split vertically 4. Edit font in
shared profile to make it smaller 5. Cmd-+ in the new
session again. Crash.

The reason was that when we split vertically we preserved
the GUID and Original Guid, but forgot to copy
_overriddenFields from the session being split to the new
session. Consequently, when the underlying profile was
updated in step 4 the GUID didn't appear to be overridden
and the shared GUID overwrote it. The session continued to
have divorced flag set to YES. Next time you change its font
size it checks if it needs a divorce and discovers its
profile is not in sessions instance.

2020-05-04: Fix handling of empty install_requires in
setup.cfg parser

2020-05-03: Show ligature performance warning. Issue 8856

2020-05-03: Tweak text prefs layout

2020-05-03: Add more debug logging around font creation for
issue 8862

2020-05-03: For inscrutable reasons, fullscreen windows
aren't added to the Window menu when the theme is minimal or
compact. Apple's long-archived "documentation" on this at
https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/WinPanel/Tasks/UsingWindowsMenu.html#//apple_ref/doc/uid/20000231-BCIBJBDA
says:

  This menu automatically lists windows that have a title
  bar and are resizable and that can become the main window

However this is a lie because fullscreen windows don't have
a titlebar and aren't resizable regardless of theme, yet
some of them are listed in the Window menu.

By pure luck, they gave us an API to work around this
brokenness, and it's actually easy to use!

2020-05-03: Don't change selection when renaming an account
in pw manager

2020-05-02: Allow tmux windows to hang around after
detaching if the tmux profile is not configured to close
them. Add a nag since this will break existing workflows and
an advanced pref to override it.

2020-05-02: Don't crash on nil hostname/username when trying
to expand a hostname or username for the context menu. Issue
8860

2020-05-02: Make it easier to edit text fields in advanced
prefs. Issue 8858

2020-05-02: Cache tab title attributed strings and metrics.
Limit the length of a tab title to 256 characters for
performance. Issue 8855

2020-05-02: Remove unnecessary logging

2020-05-02: [python] 1.12

2020-05-02: [python] Fix theme.py to set the color at
startup. Issue 6764

2020-05-01: Really skip descendants when removing copy
history [cherry pick this to master]
