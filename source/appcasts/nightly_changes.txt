2020-08-21: Fix the font for the snippets tool

2020-08-20: Add iTermBackgroundCommandRunner

Move code to run a command in the background out of
PTYTextView and into its own class. Clean it up and use it
for script triggers, too. Modify it to use the user's path
with the new environment variable exfiltration feature.

Issue 7765.

2020-08-20: Use the user's shell when running a command for
a smart selection action. Issue 7765

2020-08-19: Make command history prefix checking
case-insensitive. Issue 8659

2020-08-19: Auto command history improvements

Don't steal left and right arrow. Avoid opening auto command
history when not at the end of the command. Issue 6162.

2020-08-19: Use option+return to exit auto command
completion with a newline. Issue 8078

2020-08-19: Make auto command completion less annoying.
Issue 6887.

Use shift-enter to send command.

Don't steal enter, tab, or control keys (except ^P and ^N
which navigate the list).

Make footers in popups look nicer.

2020-08-18: Change how screen state is saved for
restoration.

Previously, the current grid was appended to the line buffer
and the whole mess was saved.

This made it difficult to restore to the primary buffer when
coming from the alt buffer (issue 8125).

This commit changes how we save state to make it easier to
restore. The line buffer, primary grid, and alt grid are
saved separately and restored separately.

Because of the new sqlite-based state restoration system,
I've removed the limit on the number of lines to save. This
might turn out to be a performance problem. I think it won't
be because only deltas get saved and the expensive work
happens on a background thread.

2020-08-17: Ensure the whole dirty region is drawn to. Issue
5665.

2020-08-17: Increase line spacing in internet-free shell
integration installer

2020-08-17: Use URLWithUserSuppliedString in mail:

2020-08-17: Fix percents in user-supplied URLs that are not
percent escapes. Use NSURLComponents for composing text
editor URLs for semantic history

2020-08-17: Replace stringByEscapingForURL with
URLWithUserSuppliedString

2020-08-17: Add script to release a beta build that was
built but not notarized in Big Sur, because xcrun is broken
on big sur

2020-08-17: Update shell integration utilities

2020-08-16: Improve URLWithUserSuppliedString.

Use the proper escaping for each part (IDN, percent,
whatever random thing is done for user and password, and
nothing for scheme).

2020-08-16: Build URLs to search the web smarter. Take in to
account what part of the URL is parameterized with %@ and
escape it properly, since (for example) query parameters are
percent escaped while hostnames are IDNed, etc. Issue 8119

2020-08-16: Perform an integrity check after opening the
restorable state db. Delete dangling references after
opening. Create an index to make that fast

2020-08-16: Various improvements to preceding commit for
security, readability.

2020-08-16: Extract usernames from txt-record entries in
bonjour/mDNS advertisements

2020-08-15: Don't disable metal when window is obscured or
bounce it when screen parameters change. This caused
slowness when switching back to the app with cmd-tab
sometimes. Issue 9044

2020-08-15: Fix a bunch of analyzer complaints. ARCify some
files in the process. Fix a bug where the slow operation
gateway ran the callback on the wrong thread. Fix some minor
memory leaks.

2020-08-15: Arcify iTermPasteHelper, make its delegate weak
in an attempt to fix the leak Alexander reported in issue
8128

2020-08-15: Copy iTermServer to a safe place before
executing it. Issue 9022.

2020-08-14: Fix a bug where restoring multiple windows would
just restore the first window many times. Issue 9076

2020-08-14: Fix build

2020-08-14: Add snippets tool. Issue 5386

2020-08-13: Make iTermImageWell respond to a single click.
Issue 9072

2020-08-13: Add some debug logging to authsock code

2020-08-13: Rebuild NMSSH

2020-08-13: Update NMSSH

2020-08-13: Fix some bugs for building third party
dependencies

2020-08-13: Rebuild NMSSH

2020-08-13: Get SSH_AUTH_SOCK from the user's shell and tell
libssh2 what it is when connecting via scp. NOTE: This won't
compile until I update NMSSH.framework

2020-08-13: Add the ability to repair saved arrangements
with bad initial working directories. Issue 9065.

Change pidinfo to a general slow operation xpc process. Add
the ability to check if a directory exists.

When a session is created from a named saved arrangement
check if its initial directory exists. If not, prompt the
user to repair the arrangement.

2020-08-12: Don't get into an infinite loop parsing a DCS
sequence that has an ESC on the last byte of a 1024 bit
chunk. Issue 9070

2020-08-12: Fix test that didn't compile

2020-08-12: Delete TCP websocket server support. Force full
environment scripts to upgrade to unix domain socket
environment.

2020-08-11: Document built-in API methods

2020-08-11: Set loadAction on the drawable colorAttachment.
Issue 9035.

2020-08-11: Move iTermMinimalComposerViewController.xib into
Interfaces

2020-08-11: Reclassify paste actions as text-sending so that
keybindings with those actions will only take effect when
PTYTextView is first responder, not something like the
search field. Issue 9067

2020-08-10: When you specify an inline image's width in
pixels and height is auto, don't round heights up to the
next cell. This fixes unnecessary truncation.

2020-08-10: Report pixels, not points, to posix window size.
Issue 9060

2020-08-10: Fix a bunch of bugs where inline images were
unnecessarily scaled a bit.

2020-08-10: Refactor graphic status bar components. Make
sparklines components animate smoothly. Use layers instead
of trying to build images for better performance. Issue 8976

2020-08-09: Fix installing of delta updates, broken by
ApplicationSupport removal

2020-08-09: Remove NSLog

2020-08-08: Add postgres icon

2020-08-08: Disable malloc scribble

2020-08-08: Fix possible retain cycle from issue 8840

2020-08-08: Do away with ApplicationSupport.

The reason for creating an ApplicationSupport symlink to
"Application Support" is that a shebang can't take a path
with a space. But there's a workaround:

 #!/usr/bin/env -S ".../Application\_Support/..."

Issue 8919.

2020-08-08: Remove stack traces from ProfileModel debug code
to improve startup performance

2020-08-07: Revert "Add various exceptions to CSI u support
for backward compatibility."

This reverts commit
2de95135556a38498b1c8e76c80b392c2b1049a2.

See issue 9052

2020-08-07: Remove deviation from CSI u spec for control-?.
Backspace does the job fine

2020-08-06: Dismiss paste bracketing announcement when a
control sequence turns it on or off. Issue 9046

2020-08-06: Respect the dismemberScrollView setting on
10.14. Issue 8826. I believe that using layers actually
fixes the performance issue anyway

2020-08-06: Change help for clock status bar component to
explain localize date format's trap. Issue 7849

2020-08-05: Defer calling -[TmuxController
fitLayoutToWindows] after adjusting a tab's layout until all
tabs in the window have had their layouts updated. Hopefully
fixes 9024, which I cannot reproduce.

2020-08-05: Streaming state restoration.

The macOS window restoration system is no longer used except
for migrating users from a previous version to this one. We
save state in a SQLite database under Application Support
now. The benefit is that we can avoid saving giant
scrollback histories that have not changed, or at least only
saving the very last part of it when the beginning is
unchanged. Hopefully it should be more reliable, as well.

The previous implementation that works kind of like Apple's
is still here in case of emergency but it can be removed
after this is in a safe place.

For all the gory details, see the delta_encoding branch.

Fixes these issues:
https://gitlab.com/gnachman/iterm2/issues/6632
https://gitlab.com/gnachman/iterm2/issues/7909
https://gitlab.com/gnachman/iterm2/issues/7278
https://gitlab.com/gnachman/iterm2/issues/6189
https://gitlab.com/gnachman/iterm2/issues/5164
https://gitlab.com/gnachman/iterm2/issues/4667
https://gitlab.com/gnachman/iterm2/-/issues/8990

2020-07-31: Fix vertical alignment in text in tip of the day
buttons

2020-07-31: Fix build

2020-07-31: Save and restore touch bar key labels. See
thread in mailing list 'Configure Touch Bar Labels and
Functions'

2020-07-31: Fix semantic history tests

2020-07-26: Refactor state restoration.

2020-07-26: Fix a bunch of bugs in window state restoration.
Expand it to all windows, not just full screen windows.

2020-07-25: Don't let a split pane become smaller than its
minimum size because of the window resizing. -[NSSplitView
adjustSubviews] ignores all the delegate methods that
constrain subview sizes. This diff does its #*(@) job for it
by calling one of the delegate methods to make the sizes
sane.

2020-07-25: Don't crash when a pane is 1 column wide.

2020-07-25: Log more state of the cumulative sum cache when
failing assertion in wrappedLineAtIndex:width:continuation:

2020-07-25: Add a magic number of iTermCallback to detect
use after free

2020-07-25: Nil out block on dealloc iTermCallback in case
the bug with leaving the group execessively is a use after
free

2020-07-25: Nil out group on dealloc iTermCallback in case
the bug with leaving the group execessively is a use after
free

2020-07-25: Tolerate touchAndHold -> touchAndHold. This
happened in the wild in crash 1595410370.876396244.txt

2020-07-25: Fix use after free of note when deleting it

2020-07-25: When you create a hotkey window with
Prefs>Keys>Hotkey>Create a Dedicated Hotkey Window, add a
keybinding to the new profile for cmd-t to open a new tab
with that profile. Issue 9041

2020-07-25: Enable secure keyboard input at password prompt.
Issue 9039

2020-07-25: Change default build back to dev

2020-07-25: Don't auto-enter copy mode unless there is a
selection. Issue 9038

2020-07-25: Use an iTermFocusablePanel for the split sheet.
Issue 9037

2020-07-24: Fix bogus iTermGeneralServerConnection pointer.
Issue 9019

2020-07-24: Really fix release build

2020-07-24: Add checkbox to advanced prefs to exclude
default values. Suggested in 4113.

2020-07-24: Add control as a shortcut for navigation.
Inspired by PR 426

2020-07-23: Fix a bug where the window didn't get shorter
when closing the last tab and the tabbar goes from being a
titlebar accessory to not being visible. Issue 9033

2020-07-22: Don't handle momentum scroll events after
changing tabs. Email with subject 'Possible bug when
scrolling between tabs'

2020-07-22: In CSI u mode, use SS3 for unmodified 'really
special sequences' of F1-F4, home, end, and arrows. See
mailing list thread 'The key <F4> cannot be used for key
binding in vim'

2020-07-21: Allow the user to provide additional tab icons.
Put graphic_colors.json, graphic_icons.json, and
graphic_xxx.png in ~/Library/Application Support/iTerm2.

2020-07-20: Change summary to 10.14+

2020-07-19: Fix leak of PSMCachedTitle, noticed in memory
graph in issue 8840

2020-07-19: ARCify iTermAnimatedImageInfo to fix a leak when
its initializer returns nil

2020-07-19: Avoid crash when a filename on the pasteboard
hits some weird edge case (bogus utf 16 maybe?)

2020-07-19: Don't die with an assertion when tmux views are
in a weird state

2020-07-19: Give each iTermThread a unique label. Job
managers get their unique label assigned before creation
because they upgrade the dispatch queue to an iTermThread
late to simplify memory management of the dispatch queue.

2020-07-19: Add iTermThread.currentThread. Improve
cross-thread stack traces.

2020-07-19: Remove double-invoke of callback. Reproduces a
crash when you close a tab and then quit.

2020-07-19: Add debugging to catch extra dispatch_leave in
multiclient

2020-07-19: Implemnt a no-op encodeWithCoder: in PTYTab to
avoid crashing if NSTabViewItem decides to encode its
identifier.

2020-07-19: Bounds check sumOfValuesInRange and avoid
passing out of bounds values to it from
absPositionOfFindContext to fix a crash in 3.4.0beta1.

2020-07-19: Enter copy mode automatically if you press
shift+arrow/home/end while there is a selection. Add
home/end support to copy mode.

2020-07-19: Add a bunch of debug logging for killing child
processes. Add a warning when the path to the daemon
includes 'A Document Being Saved By Autoupdate'. Issue 9022

2020-07-19: Add more debug logging to iTermEventTap.m for
issue 9002

2020-07-19: Change the Beta icon so it isn't vulgar in
Chinese. Issue 9021

2020-07-19: Add assertions ot track down issue 9019

2020-07-19: Add a clear pixel to the root terminal view to
work around a bug when entering full screen. For all the
gory details see issue 8701. Limited to 10.14 in the hope
that the bug is fixed in 10.15.

2020-07-19: Avoid using NSAttributedString as a dictionary
key. It is jaw-droppingly slow. Create a very special
purpose dictionary key for the CTLineRef cache that is quick
to hash and compare. Issue 9016

2020-07-19: Switch beta-iTerm2.plist and iTerm2.plist to
modern from new

2020-07-19: Add back testing_new for betas since we want
transitional builds to upgrade to 3.4

2020-07-19: 3.4.0beta1

2020-07-19: Make AMIndeterminateProgressIndicators lock
phase

2020-07-19: Fix appearance of popups. I believe it was
hardcoded to light for pre-mojave brokenness

2020-07-19: Remove intercell spacing from open quickly
tableview for big sur

2020-07-19: [big sur] also fix tags view scroller

2020-07-19: Remove intercell spacing for the captured output
tool on big sur because it clips the selection rounded rect.
Bring back the bullet for it too, not sure why that was
removed

2020-07-19: Improve appearance of toolbelt on big sur

2020-07-19: Add space for the bottom margin of the open
quickly table view in big sur. I wish there were an API for
this.

2020-07-19: Improve appearance of compact tabs on big sur

2020-07-19: Use the fat title bar font for the shortcut
label and minimal title

2020-07-19: Remove dependency on DSA key

2020-07-19: Update build scripts to only update _modern.xml

2020-07-19: Remove dsa_pub.pem. EdDSA is now the only
signature type supported. See
https://github.com/sparkle-project/Sparkle/issues/1355 for
how this is supposed to work. 3.3 is the transitional
release and 3.4 is the 'modern' release.

2020-07-19: Remove obsolete todos

2020-07-19: Update app icon, courtesy of Arda ebi with edits
by me

2020-07-19: Bump deployment target of UKCrashReporter

2020-07-19: Remove bogus warning

2020-07-19: [sigarchive] Create v2 archives

2020-07-19: Remove logging during upload

2020-07-19: Bump minimum python environment to 67

2020-07-18: Do not warn about multi line paste when the
RemovingNewLines flag is true. (#425)


2020-07-17: Fix type in the You Seem Fustrated text popup
(#424)

Co-authored-by: Alexander Coll <acoll@enova.com> 2020-07-12:
Inform nightly build users about the forthcoming deployment
target change

2020-07-12: Improve makefile for third party dependencies.

Bump deployment target for CoreParse and NMSSH to 10.14.

2020-07-12: Change deployment target to 10.14.

2020-07-11: [python] Bump version to 1.16 and require pyobjc
as a dependency. This allows it to connect to iTerm2 3.4.x

2020-07-11: Show a message in the top right of the screen
when APS is activated. Issue 9015

2020-07-11: Make timestamps look identical between GPU and
legacy

2020-07-10: Fix a bug introduced in
61ebef16f71995d0bac90bd1ef0446d622d2d75f.
iTermTabBarControlView needs to update its superview's
alphaValue, but that change made it not recognize its
superview. Issue 9013

2020-07-10: Don't allow a key equivalent to delete from the
actions tool when it's not first responder. Issue 9012

2020-07-10: Speed up file transfers in tmux. Remove the 1
meg cap. Issue 9010

2020-07-09: Fix crash when using non-master tmux

2020-07-09: Avoid constantly re-creating status bar icons.
The test for whether the imageview's image equals the
provided image for the status bar component always failed
because I guess the imageview changes the image at some
point on its own. This commit adds a new api for cacheable
images. It's fine to cache status bar images because they're
tiny and you usually don't change them much. An attempt to
fix issue 8978

2020-07-09: [python] Bump version

2020-07-09: [python,api] Add Arrangements.async_list. Issue
9004

2020-07-09: Fix compact windows entering full screen in big
sur: there was a gray rectangle in full screen under the tab
bar. This also affects older versions of macOS because I
moved the call to updateTabBarControlIsTitlebarAccessory in
windowDidEnterFullScreen to after lionFullScreen_=YES which
it needs in order to reason correctly about whether it
should be a titlebar accessory. This will either fix a bunch
of bugs or create a bunch of bugs, or maybe both. sigh

2020-07-09: Move tabbar out of title bar in big sur because
it looks bad with 4 points of empty space under it

2020-07-09: Make third party packages buildable via the
makefile. Build them all for ARM & x86.

- Remove x86-specific CPU profiling. Rebuild CoreParse as a
fat framework - Build fat libsixel archive - Build fat color
picker framework - Build fat better font picker - Build fat
searchable combo list view - Add openssl submodule - Update
openssl submodule to include stuart's patch - Add makefile
targets to build openssl - Add libssh2 submodule - Add
makefile targets for fat libssh2 - Add fat NMSSH binary -
Add copy phase to fatlibssh2 - Commit fat sparkle framework
- Fix warnings - Fix warnings - Fix capitalization - Improve
libsixel makefile target - Rebuild libsixel-x86 with 10.12
deployment target - Add fat libsixel

2020-07-08: Turn off escapeWithQuotes advanced pref. See
analysis in issue 9003

2020-07-08: Daemonize iTermServer and have it die when the
bootstrap port dies. Issues 9000 and 8986.

2020-07-06: Fix layout bugs in 10.5 for command history and
captured output toolbelts

2020-07-06: Allow prompt to change length. Accept multiple
FTCS B sequences. Issue 8996

2020-07-06: Free unused images after session restoration
completes. Issue 8840

2020-07-06: Add support for tmux subscriptions. See
https://github.com/tmux/tmux/issues/2242

2020-07-06: Preserve scroll position of top line during
window resize. Issue 8989

Also fix scrollLineNumberRangeIntoView, which was horribly
broken (sometimes scrolling half a line in at the top).

2020-07-05: Make windows draggable by the status bar.
Prevent dragging a window by its titlebar if the window
should not be draggable. Issue 8993

2020-07-05: Fix failing tests

2020-07-05: Fix support for ZWJ in emoji

2020-07-05: Suppress stoplight hotbox when the search field
would be under it

2020-07-04: Fix wrong URL encoding for sematic history paths
(#422)

This fixes wrong encoding of paths when cmd-clicking on
existing files in sematic history to for example open the
file in MacVim or a custom URL.

The problem is that URLHostAllowedCharacterSet does not
contain the slash character, so eg. /Users/foo/bar baz.txt
is encoded as %2FUsers%2Ffoo%2Fbar%20baz.txt instead of the
correct /Users/foo/bar%20baz.txt.

While some application might not care this at least breaks
opening files in MacVim, which requires proper path
encoding.

This changes to use the correct URLPathAllowedCharacterSet
instead.

It is possible that URLHostAllowedCharacterSet contained "/"
in the past, even though it is not a valid character for the
host part of a URL and Apple fixed it it newer SDK versions.
2020-07-04: Update libsixel. Add makefile target to build it

2020-07-04: Fix big sur window border

2020-07-04: Disable window border feature on 10.16. I am
hopeful that it is no longer necessary now that I have fixed
the problem where window borders disappear for transparent
windows.

2020-07-04: Enable window shadow with blur on 10.16. Work
around a bug where blur would sometimes break when toggling
blur or use transparency.

2020-07-04: When transparent, don't set the background color
to clear. Instead, make it really close to clear. Apparently
this helps performance according to
https://notes.yvt.jp/Desktop-Apps/Enabling-Backdrop-Blur
because alpha of 0 is for irregularly shaped windows. I hold
hope that this means I can use the shadow again, too

2020-07-04: Use CGSDefaultConnectionForThread instead of
CGSMainConnectionID based on
https://notes.yvt.jp/Desktop-Apps/Enabling-Backdrop-Blur

2020-07-03: Add libsixel submodule

2020-07-03: Add Sparkle submodule

2020-07-03: Add CoreParse submodule

2020-07-03: Add my fork fo NMSSH as a submodule

2020-07-03: Remove bad test for whether mouse reporting
should start for a 3-finger drag. The removed code rested
whether mouse reporting was allowed in prefs, which is silly
because it's usually allowed in prefs but not usually
actually enabled. Furthemore, this code was unreachable when
the drag was reported because it returned early from the
function. Issue 8992

2020-07-03: Make minimal and compact windows draggable by
the area near the top (if top tabs) or bottom (if bottom
tabs) of the tabbar. Issue 8046

2020-07-03: Add the ability to hide empty status bar
components. Issue 8517

2020-07-03: Fix a bug where component knobs couldn't get
first responder.

2020-07-03: [python] Update menu IDs

2020-07-03: [python] Add sync_title

2020-07-02: Start implementing filter. TODO: Figure out a UI
and then call -[PseudoTerminal filter:]. The current
implementation uses the find pasteboard which is impossible
for users to comprehend. Issue 3039
