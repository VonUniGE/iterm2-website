3.4.0

New Features
- There's a new pane in Preferences calls
  Shortcuts where you can define Snippets and
  Actions. A Snippet is a piece of text that you
  can paste from the toolbelt, status bar, or from
  the Edit menu. Actions are similar to key
  binding actions, but can be invoked from the
  toolbelt, status bar, or Edit menu.
- Search results, marks, and annotations are now
  indicated in the scroll bar.
- There's a new "Composer" feature that lets you
  quickly open a scratchpad to enter a command.
- Adds support for flow control in tmux 3.2 and
  "pause mode" that will automatically pause
  sessions in tmux integration that get very far
  behind with the ability to catch up quickly.
  NOTE: tmux 3.2 has not yet been released.
- In the Minimal and Compact themes, you can now
  drag the window by grabbing the edge of the tab
  bar near the window border.
- Add "Add Trigger" menu item, which lets you
  quickly create a highlight trigger.
- You can now set a custom tab title on a profile
- There is a new profile preference to configure
  whether mouse reporting of clicks and drags are
  allowed.
- There's a new preference to focus a window when
  you right- or middle-click in it.
- Add support for IntelliJ IDEA, VSCodium, and
  Sublime Text 4 as Semantic History editors.
- You can now swipe with two or three fingers
  between tabs, like in Safari.
- Curly underlines are now supported.
- Adds support for DECRQSS.
- DECSCUSR 0 now resets the cursor to its default
  setting.
- tmux integration windows will now keep their
  size the same as you create or destroy split
  panes.
- Adds a preference to exclude iTerm2 from the
  dock and cmd-tab app switcher only if all
  windows are hotkey windows.
- Show local time in the context menu when you
  right click on a timestamp in microseconds since
  epoch.
- Add a menu item "copy with control sequences".

Improvements
- Various performance improvements.
- Window restoration made more reliable.
- The Python API now uses a Unix Domain Socket
  instead of a TCP socket for better performance.
  The security model has also changed: apps can
  authenticate via Applescript or you can choose
  to allow all programs running locally to use the
  API.
- Use a single daemon process for all sessions
  instead of one per session. This reduces the
  number of process IDs used and also improves the
  time to launch a new session.
- Background images are significantly faster when
  not using the GPU renderer.
- Most table views now allow multiple selection.
- The number of search results is now shown in the
  Find on Page UI.
- Dynamic profiles now works with symlinks. Even
  the DynamicProfiles folder itself may be a
  symlink.
- Exported scripts now have a more secure
  container format that signs the entire file
  except the signature itself.
- Improve cold launch time.
- Countless minor improvements and polishing.
- Big Sur supported.
- Permission is now requested before various
  possibly destructive or annoying activities are
  done in response to control sequences.
- Don't snap window size to the cell grid when it
  gets resized by an Accessibility API.
- Only use touch bar mitigations for keypresses
  originating from the built-in keyboard.
- The profile preference "Send text at start" is
  now an interpolated string.
- The profile preference "Custom command" is
  now an interpolated string.
- The feature where the scroll wheel sends arrow
  keys when in alternate screen mode now works
  even when alternate screen mode is disabled.
- Enable window shadow for transparent windows.
- When resizing the window while scrolled up in to
  history, keep the text in the top left locked in
  position.
- Show a brief message when automatic profile
  switching takes effect.
- Send a newline before sending the curl command
  to install shell integration to clear out any
  existing command.
- Disable GPU renderer for obscured windows when
  using the integrated GPU.
- When a tmux pane fails to split, don't detach.
- Remember tmux window sizes when reattaching.
- When disintering a buried tmux tab, put it back
  in the right position in the same window it came
  from.
- Draw outline on right hand side of last tab in
  minimal theme.
- Hide subpixel antialiasing UI on big sur because
  Apple took it away from us :(
- Draw window borders on big sur in light theme.

Bug Fixes
- Fix a discrepancy between the legacy and GPU
  renderers. When an emoji with default text
  presentation follows an emoji with default emoji
  presentation, CoreText renders the emoji with
  the emoji presentation while the GPU does not.
  Use the default presentation always.
- Detect hostname changes. Fixes the git status
  bar component breaking.
- Fix support for multiple broadcast domains in
  Python API.
- Full screen windows in the Minimal or Compact
  theme did not used to get restored properly and
  now they do.
- Fix how 24-bit colors are reported to work with
  vim.
- Saved arrangements that contain local changes
  (such as those made with Edit Session) will now
  pick up changes to the original profile.
- Fix a bug where inline images and OSC 8
  hyperlinks didn't get restored reliably when
  restarting the app.
- Improve support for zero-width joiners in Emoji.
- Fix a memory leak of inline images when
  restoring windows after restarting the app.
- Fix a bug where Swap With Session didn't work on
  tmux panes.
- Fix a bug where quickly resizing tmux windows
  would increase the bottom margin.
- Fix a bug where Window > Resize Window would
  cause tmux windows to resie incorrectly.
- Fix a bug where windows are not movable after
  exiting native full screen.
- Add crlf after sixel image.
- Fix shift-return in profiles window to open a
  window instead of a tab.
- Fix a bug where tmux windows would change sizes
  unexpectedly when using horizontal/vertical
  character spacing.

Things Made Worse
- Support for macOS 10.12 and 10.13 dropped.

